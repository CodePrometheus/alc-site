<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ALC Beijing</title><link>https://alc-beijing.github.io/alc-site/post/</link><description>Recent content in Posts on ALC Beijing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Jul 2020 20:15:27 +0800</lastBuildDate><atom:link href="https://alc-beijing.github.io/alc-site/post/index.xml" rel="self" type="application/rss+xml"/><item><title> Apache APISIX 的快速之旅（全文版）</title><link>https://alc-beijing.github.io/alc-site/post/podcast/episode-3-the-story-of-apisix-fulltext/</link><pubDate>Thu, 09 Jul 2020 20:15:27 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/podcast/episode-3-the-story-of-apisix-fulltext/</guid><description>引言 本周我们推出了 Podcast Episode #3: Apache APISIX 的快速孵化之旅（音频版），为了能够让更多的习惯于文字阅读的成员们熟悉我们的故事，特别推出了全文实录的文字版，请笑纳！
Apache APISIX 或 APISIX 在下文中均指称：Apache APISIX。
正文 适兕主持人：
Hello，大家好，欢迎来到ALC 北京 PodCast。这次我们请到的是 APISIX 的核心成员，请各位嘉宾跟我们听众打个招呼。
温铭：
大家好，我是温铭，Apache APISIX的PPMC成员。我之前是在互联网公司工作了有10年，主要是在做安全方向，然后最近三年都是在做开源软件的商业化，也就是说我最近三年是全职做开源项目，非常庆幸今天有机会和大家一起聊聊 Apache APISIX，以及APISIX背后的一些故事。
王院生：
大家好，我是王院生，我算是年纪比较大的一位了，05年毕业之后做了近10年的传统金融行业，在（20）14年之后进入互联网。在那一年认识了温铭，也开始做一些非常有意思的事情，从（20）15年开始做比较多的开源方面的事情，确实在做的过程中，开源、（过程很）开心让我是比较享受的。最近两三年也在尝试做一些开源方向的创业，正好跟大家一起来聊一聊我们在创业过程中的一些收获。
姜宁:
我叫姜宁，熟悉ALC Beijing Podcast 应该比较了解，我好像每次活动我都会在场，今天很高兴能跟同学们一起来聊聊，有关孵化以及后面创业商业化相关的一些事情。
适兕主持人：
我们先从项目开始，目前来说， APISIX，它是什么样的状态？花简单几分钟时间介绍一下这个项目是干什么的。
温铭：
Ok，我先来大概说一下APISIX是干什么的。简单的来说 Apache APISIX它是一个API网关，它可以帮你来处理南北向以及东西向的流量。如果不太熟悉网关的同学，就可以把APISIX简单的认为和Nginx做的是同样的事儿，只不过 Nginx是靠静态的配置文件来驱动的，你修改了任何配置的话，都是要reload服务才能生效的。 但是在APISIX里面，我们一直在强调的，它是一个动态的实时的这样的一个网关。你所有的修改包括路由、证书、以及这种限流限速以及插件的各种配置，它全都是动态的。 你可以非常容易的去修改它的内容，而不用去重载它的服务。简单来说它就可以帮你动态的管理流量。 APISIX 现在的状态， 它是在去年10月份的时候进入了Apache孵化器，到现在我们有7个多月的时间，我们发布了6个Apache release，差不多是每个月会发布1个 apache 的 release，在进入Apache之前我们只有20多个contributor，到现在我们82 个contributor, 20多个 committer, 所以我们的发展速度还是比较快的。不管是从社区的发布版本，以及我们吸收更多的贡献者，和我们对贡献者一些快速的认可，我觉得我们这方面速度都是比较快的。
王院生：
我简单补充一点，在APISIX 之前其实也有一些API 网关，因为 API 网关实际上是一个非常成熟，并且是被大家了解了很久的一个概念的存在。是在2000年之前就在普及的一个概念，我们当时之所以要开发网关类产品并捐赠给 Apache， 是因为我们发现已有的网关并不适合云原生，结构也比较臃肿复杂、弹性伸缩支持不好，性能上也不能满足现在 IoT、5G微服务等低延迟、高并发的要求。基于以上考虑我们希望能做一个真正是社区化的，如Apache这样的组织，能够持久的做大家都需要的产品，所以我们发起了 APISIX 这个项目，我们当时发起这个项目的目标，要把它的性能、扩展性等方面做到一个极致。这是我们一开始的目标，现在来看我们距离这个目标越来越近。而且对 Apache 的文化也有了进一步的认识，尤其是多样性、多元化，是非常契合我们当时的愿景的。我们 PPMC 里面除了少数几位我们公司的，其余都是来自各个不同公司的，将近有20多家公司都在参与，这还只是committer部分，如果算上contributor的话，还有更多的人参与。</description></item><item><title>Podcast Episode #3: Apache APISIX 的快速孵化之旅（音频版）</title><link>https://alc-beijing.github.io/alc-site/post/podcast/episode-3-the-sotry-of-apisix-audio/</link><pubDate>Mon, 06 Jul 2020 21:02:45 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/podcast/episode-3-the-sotry-of-apisix-audio/</guid><description>内容梗概 Apache APISIX 在2019年10月份进入了 Apache 软件基金会孵化器，到现在（采访期2020年六月）有7个多月的时间，就做了多达 6 次的 release 发布，也就是说差不多是每个月就会发布1个release，在进入Apache之前，APISIX 只有20多位contributor，截止到现在，已经拥有了80多位committer，在如此之短的时间内，Apache APISIX 是如何做到的？是什么样的魔力，让Apache APISIX 项目、团队、Community 有这么快的加速发展了呢？
请仔细聆听，两位创始人和一位导师的精彩分享。
时间线 时间区间 妙语连珠 00：30 ~~ 02：23 嘉宾自我介绍 02：24 ~~ 05：45 Apache APISIX 是什么？ 05：48 ~~ 10：40 过去的开源相关经验（基金会、项目、Community）等对Apache 的孵化作用。 12：10 ~~ 15：00 开源共同体的身份，是否能够让开发者在所在公司加权？ 15：10 ~~ 19：20 开源Community 最佳实践：抱怨也是爱！ 19：30 ~~ 24：05 中文汉字与国际化的考量 24：20 ~~ 33：30 进入Apache 软件基金会孵化的一点提示 ：创始人退一步，引进更多的committer 33：39 ~~ 42：37 线下活动对于项目的帮助非常之大，和上下游合作伙伴合作效果更佳 42：50 ~~ 48：15 还是有一些用户愿意付费的，就看你能否识别出来 48：20 ~~ 52：40 关于国内建立基金会与参与Apache 软件基金会之间的差别 52：50 ~~ 57：45 APISIX 将如何看待开源的 Supply Chain？未来怎么做 57：50 ~~ 60：00 总结：开源是提升开发者自我的最佳方式 请收听 本期嘉宾 温铭：深圳支流科技创始人，云原生 API 网关 Apache APISIX(Incubating) PPMC 成员，360 开源委员会发起人，《OpenResty 从入门到实战》专栏作者。在互联网安全公司和黑产对抗多年，有 40 多项中美安全专利。</description></item><item><title>越是全球化，越要本土化：ALC Beijing 成员（部分）自我承诺</title><link>https://alc-beijing.github.io/alc-site/post/alc-beijing-member-self-introduce/</link><pubDate>Sun, 05 Jul 2020 10:41:22 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/alc-beijing-member-self-introduce/</guid><description>引言 2020年过去了一半了，这半年过的猝不及防，过的胆战心惊，让所有人都明白自身的脆弱。开源亦无幸免，尽管在远程协作上，开源有着由来已久的擅长，但是疫情仍然阻止了开源人最为重要的活动—— 线下见面会。
我们所有人，依然要坚强的抵抗这次疫情，作为开源的一份子，能做到就是继续倡导合作的重要性，即使无法见面，我们可以通过互联网来实现沟通、协作，正如开源世界一直以来都在做的这样。而且要充分的利用互联网的全球性、世界性、跨地域的特性。当然，众所周知，全球性的沟通面临更多的问题：时区、即时、语言、文化等等。
就Apache 软件基金会而言，作为一家慈善的非营利组织，20多年来一如既往的推动着基于来自全球各地的开发者共同协作，当然有可能会在地域色彩特别的地方会遇到一些障碍，比如在中国本土遇到的异步沟通问题。即使是这样，在中国本土仍然有勇敢而坚定的先行者们，他们不仅以身作则，突破了很多障碍，而且还顺利的晋升为 Apache 软件基金会的成员，更加重要的是他们在自身已经全球化之后，要将本土的后来者也带上，但是首先要做的是本土化。
嗯，这就是 Apache local Community Beijing 成员们，以下是他们的个人介绍和承诺！
视频 时间线 时间 出场人物 00:00 ~~ 00:10 不容错过的Apache logo 片头 00:11 ~~ 01:23 开源重度爱好者姜宁 01:24 ~~ 02:50 开源玩家吴晟 02:51 ~~ 03:37 陈亮 03:38 ~~ 05:11 至凡至简 的 孙金城 05:12 ~~ 05:52 张亮 05:53 ~~ 06:52 潘娟，娟神 06:53 ~~ 07:41 李钰 07:42 ~~ 08:40 黄向东，清华大学 08:41 ~~ 10:00 李岗 10:01 ~~ 11:24 温铭 11:25 ~~ 12:26 布道师适兕 精彩语录 在 ALC Beijing ，你可以结识到Apache的开源大牛、了解 Apache 项目的最新进展，更有机会参与到实际的开发当中，全方位的提高自身的水平与能力。</description></item><item><title>Podcast Episode #2（上） : Apache ShardingSphere 开发者们的欢乐与刺激</title><link>https://alc-beijing.github.io/alc-site/post/podcast/episode-2-1-talk-to-shardingsphere/</link><pubDate>Sun, 31 May 2020 17:08:49 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/podcast/episode-2-1-talk-to-shardingsphere/</guid><description>内容梗概 2020 年 4 月 16 日，Apache ShardingSphere 最终通过基金会董事会决议，加入了 TLP 梯队！从 2016 年 1 月的第一行代码到现今的 300K+行代码，中间经历了什么？来自创始团队和中坚力量的成员们坐下来和大家分享 Apache ShardingSphere 成长的历程！
时间线 01：00 ~~ 06：30 本次参与嘉宾的个人自述，各有精彩！
07：00 ~~ 10：00 灵魂拷问：在座的 ShardingSphere 成员是如何凝聚（bonding）在一起的，发起人张亮不正经回答。
10：00 ~~ 13：00 Zhyee 的结识、加入分享，强调开源协作的重要
13：21 ~~ 17：20 董宗磊和 ShardingSphere 的缘分，由于Apache 而更加紧密
17：30 ~~ 17：50 姜宁表达新的感悟： 开源community 更是一个知识共享的平台
21：30 ~~ 29：30 ShardingSphere 成长的几个阶段
30：00 ~~ 36:15 娟神：女性既是优势，也是压力！ 从“自我”到“心中有Ta”的转变！
37:10 ~~ 40: 00 另一位女性开发者颜志一 既是 ShardingSphere 的成长之旅，也是开源的晋级之旅。
卖个关子，下期讲：ShardingSphere 的开源初心是什么？是什么样的力量驱动着Ta们走到今天？
请收听 本期嘉宾 张亮：京东数科数据研发负责人，Apache ShardingSphere VP，Apache Dubbo PMC，人气开源项目 Elastic-Job 作者。</description></item><item><title>Podcast Episode #2（下） : Apache ShardingSphere 团队谈Apache</title><link>https://alc-beijing.github.io/alc-site/post/podcast/episode-2-2-talk-to-shardingsphere/</link><pubDate>Sun, 31 May 2020 17:08:49 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/podcast/episode-2-2-talk-to-shardingsphere/</guid><description>内容梗概 2020 年 4 月 16 日，Apache ShardingSphere 最终通过基金会董事会决议，加入了 TLP 梯队！从 2016 年 1 月的第一行代码到现今的 300K+行代码，中间经历了什么？来自创始团队和中坚力量的成员们坐下来和大家分享 Apache ShardingSphere 成长的历程！
时间线 00：00 ~~ 02：00 张亮谈开源初心， 开源让技术更为优雅、极致，开源的组织让我们走的更远！
02：10 ~~ 08：30 金卫个人的开源历程，全职做开源梦想成真！
12：00 ~~ 14：30 ShardingSphere 从个人项目到 Apache TLP 中间发生了哪些关键的跃迁？从技术模块扩展到共同体（Community）多样性
15：00 ~~ 18：00 模块化架构的重构来龙去脉
18：40 ~~ 19：00 好的软件是用出来的，不是设计出来的
19：10 ~~ 23：30 共同体的变化, 从个人主义到 Apache 之道
24：00 ~~ 25:00 Apache 孵化器的导师绝对“奥利给”
28: 00 ~~ 29：30 姜宁在参与导师当中的经历，对Apache 的重新认知，尤其是共同体的强调！
29：40 ~~ 31：00 张亮对开发者参与开源的职业生涯影响： 中国有很多优秀的开发者！
32：30 ~~ 33：00 吴晟分享在共同体中处理冲突， 开源项目在世界这个更大的舞台</description></item><item><title>【Apache 博客】之 冠状病毒肆虐之下的远程协作</title><link>https://alc-beijing.github.io/alc-site/post/apache-blog/success-at-apache-remote-collaboration/</link><pubDate>Mon, 25 May 2020 16:06:05 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/apache-blog/success-at-apache-remote-collaboration/</guid><description>ALC Beijing 引言 2020年，对于世界上所有的人都是一场灾难，在刚刚开完的两会，国家希望通过地摊经济来复苏中华大地的经济繁荣，当然这在日常的小商品、食物等方面还可以，那么信息经济下，过去一直都在一个屋檐下工作的人，突然变成了在线会议的方式，一定会出现一定不适应，甚至会出现效率低下。这个时候，最应该考虑的就是开源的协作模式！当然，ASF 以其独特的完全虚拟享誉全球！值得学习的地方实在是太多了。
前序 我（Marvin Humphrey）是在2005年”抵达“ ASF （Apache 软件基金会的简称，下同） 的，起因是我对 Apache Lucene 的一个Bug有了严重的不满情绪，之所以使用“抵达”这个词汇，就像是我找到了某种归属，因为自从那时发起了第一封邮件之后，在接下来的15年里，我发送了数以万计的邮件，可想而知我在ASF花了多长时间，这几乎是我的第二个家。由于 ASF 一直以来都没有实际的“物理”办公室，所以也就免去了很多现实中的麻烦，比如是否穿戴得体、肢体语言是否合规等等，其实就那个Bug 来讲，我当时不满的原因是：Doug Cutting （Hadoop创始人 ——译者注），当时还是Lucene 项目的贡献者，认为他非常没有耐心。
让我们回到本文的主题上了，因为Apache 这20多年来没有实际的办公室，大家均是基于互联网这个虚拟的线上共同体而工作在一起，所以新冠病毒发生以来，其实对于 Apache 的成员和贡献者们的影响是微乎其微的，尽管对于每位贡献者的个人生活上是确确实实受到了影响，但是就ASF的整体而言，并没有出现什么不适应之类的。
但是 ASF 之外仍然有很多的人，他们未必有这样的一套机制和习惯，世界各地的人们都在为抗争疫情而努力，尤其是“社交距离”的约定，原有的公司章程等均可为此而进行修订，另外让人痛心不已的是，有些人根本都没有机会来进行改变，直接破产倒闭，人已经失业了。
然而，决定改变的人们遭遇到了一些窘境，是将大量的工作采用了远程的方式来做，但是进展缓慢；突然而至的远程工作，人们措手不及。那么我们是不是可以如此的积极思考了呢？加快并简化向远程协作的过渡，那么可以节省不少的精力，并可以提高效率。这里可能需要加上一点创造力，面对疫情之下的“新常态”，是可以做到比原来更加高效的，而且也不需要花多久就可以适应。
请问你是开源贡献者吗？如果是的话，那么贡献你，你已经具备了当前全球复杂经济面前的急需的远程工作的能力和知识，接下来就让我们来聊聊我们所知道的以及或许可以帮助到你的一些内容。
互联网将人们变成了“怪物” 在互联网，人们彼此的交流大多是通过对着电脑屏幕敲打键盘完成的，这区别于我们现实中面对面的语言交流。作为社会性的人类，我们可以通过他人的面部表情、语气、肢体语言等反馈来对自己进行相应的校准，并作出适当的反应。当时，当所有的沟通和交流都通过击打键盘来完成的时候，就没有了面对面那种反馈机制，这对于人来说是及其难以适应的事情，往往会产生一些不好的效果，尤其是带有情绪的词汇。
那么，过往一直以来都是在办公室交流的人们，突然转移到了Slack、电子邮件、以及其它以文本的方式交流的方式和渠道，有一定的不适应是较为正常的，但是通过文本来进行沟通是有难度的，需要训练自身的同理心来获得提升，个人建议去观看“Jimmy Kimmel Show” 当中的“名人阅读Tweets”节目, 可以有效提升自己对于一些词语的敏感度。
世界是动态演变的，只要开源共同体仍然有存在的意义，那么它就必须在每一天都要和这些不便进行斗争。随着时间的流逝，“阴谋”的人身攻击由于其潜在的腐蚀作用而逐渐成为禁忌。这就成就了我们在文化上的共识：应该去评判那些想法，而不是人本身。
随着越来越多的共同体采用“行为准则”，辩护变得越来越正式和复杂。这些明文的文档，主要目的是防止骚扰，以及其它严重的不当行为，这些文档通常包含有关共同体成员应如何彼此相待的颇为理想的建议，因为在鱼龙混杂的环境下特别容易产生一些严重的不当行为。
无论如何，各位看官，你自身所在的组织是否采用了行为准则，自觉的提高职员们对来自网络的攻击性的警觉意识，是上佳选择。基于此之上，职员们才能有效的识别言辞，设身处地的为他人着想，从而使每个人都能够采用更具建设性的沟通方式。
知会大家 不过话说回来了，即使是在同一个办公室内，人与人之间的协调依然是件充满挑战的事情。当然，在远程这样的形势中，协调的难度更是加大了不少，需要付出更多的精力，这个时候最需要建立的就是公开透明的“知会大家”文化，否则，团队将变得碎片化，每个人也将变得孤立。
在ASF，这样的情形可谓是极端化了，因为 Apache 的在线共同体遍布全球各个角落。由于牵扯到的时区实在过多，一般情况下是无法召集到全部的利益相关者在一起开会的，即使是在线视频会议也难以成行，另外，还有一个因素，那就是不是所有的贡献者都是专门针对 apache 项目进行的，大多时候是业余时间进行的。
面对面，视频聊天，电话，文本聊天等“同步”通信渠道非常适合快速启动迭代和提炼想法，但实际上却将任何不实时关注的人排除在外。即使捕获了对话（例如通过AV录制的实时会议或记录的文本聊天），它的效率也很低，并且常常使事后回顾事情的发展变得混乱。
面对如此的情形，ASF 采用的策略就是所有有实际意义的项目都需要在 单个、异步沟通渠道中进行。
这个频道必须要严肃对待起来，从而能够让所有的参与者都信任该频道，即使是人们没有来得及观看和参与所有的消息，但是重要的内容不会被错过。 沟通渠道必须是异步的，从而确保一些资源受限的参与者的权益。 另外，关于同步的活动是可以在此频道之外进行的，再强调一点，同步有其自身的优点，同步的沟通对于迭代想法非常的有效，但是，身处共同体的人还是希望此类的会议能够被记录摘要，并将之发布到刚才提到的沟通渠道，从而使得所有的利益相关者有机会发表各自的看法。
在 ASF，这个严肃而正式的异步通信渠道就是邮件列表，但这不代表什么，其它也有非常好的工具：对于某些非技术性的任务，可以是 Asana ，也可以是 Wiki，甚至是一个电子表格，都是可以的。过度追求技术上是没有太多意义的，最为关键的仍然是亮点：1）正式 2）异步。
做出决策 在办公室，决策者可以通过获得各种各样的信息：如通过不经意的偷听、一起吃工作午餐、即兴的协作等等，然而在不期而至的远程工作中，这些渠道统统不复存在，只有经过人们深思熟虑的信息，是唯一的决策依据。
但是，一个正式的异步通信渠道在某种程度上可以对这样的情形进行一定的补偿，这样的方式有效的提高了透明度，所有的工作及其进度、成员的合作状态，都是一目了然的，即使哪怕是工作是独立完成的，也是众人皆知的。而恰恰是通过正确的使用异步沟通渠道获得信息，而不是混乱而冗长的实时的信息交换，这样就可以有一个从高处观看的视角来洞察整个全局的情况，另外，正式的沟通渠道还有一个至为重要的能力，那就是可以衡量大家达成的共识，还保持所有的记录。
懒人共识法（Lazy consensus）是一种蛮有效率的确认方式，例如某位成员将提案发布出来，如果在某个时间范围内（ASF为72小时）没有异议，则该提案被认为是隐式同意的。通过对沟通渠道进行积极的监督，将那些有缺陷的提案标记出来，懒人共识法 是鼓励积极主动者颇为强大的工具，这也是远程参与者非常宝贵的个人品质。</description></item><item><title>英雄之旅-行走在开源领域的一个自叙故事</title><link>https://alc-beijing.github.io/alc-site/post/heros_journey_trista/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/heros_journey_trista/</guid><description>作者介绍 潘娟，京东数科高级DBA&amp;amp;Apache ShardingSphere PMC，主要负责京东数科分布式数据库开发、数据库运维自动化平台开发等工作。曾负责京东数科数据库自动化平台设计与开发，现专注于Apache ShardingSphere分布式数据库中间件平台的开发。主要在分布式数据库、开源、分布式架构等相关领域进行探索。多次受邀参加数据库&amp;amp;架构领域的相关会议并进行分享交流。
前序 《英雄之旅》是由美国神话学家约瑟夫·坎贝尔提出的。好莱坞很多经典IP巨作即是把《英雄之旅》的套路搬上了巨幕。
最近在读一些心理学书籍，随即发现我们每个人的一生都是一场英雄之旅。从被使命召唤、踏上艰辛的考验之旅、接收他人恩赐、发现自我、到达胜利顶点、回归自我。然而，很多人可能一生都行走在发现自我的路上，若是有幸，则能到达顶点，回归自我。
这篇分享以”英雄之旅“为开始，是希望把自上篇文章-程序媛成长纪：从DBA到研发工程师以来到现在的经历，提取出经验点，与所有行走在英雄之旅的朋友交流，碰撞火花。毕竟我们每个人面对工作、生活、家庭、自我都有着太多冲撞和思考，需要被他人理解和照亮。:-)
由点及面 上篇的自叙文谈到我从运维DBA转成了Java开发工程师。准确的说，应该是开源分布式数据库开发工程师。因为在过去一年半多的时间里，我更多地是在分布式数据库中间件平台、分布式事务框架、分布式治理等领域做相关的研发工作。主要从事的项目是Apache分布式数据库中间件平台Apache ShardingSphere, 和京东数科主导的分布式事务平台JDTX（未开源）。 之所以说”由点及面”，是因为工作的内容开始从最初新手关注的一个点，开始渗透到整个项目的各个领域。从最初做的metaData初始化加载模块到现在Apache ShardingSphere的11个一级模块中，有8个模块都是深耕接触过，此外还有公司内部的分布式事务平台JDTX。从这里可以看出一个新手开始逐渐变成了”老司机“。这让我突然想到之前很多人问过的一个问题— 类似像ShardingSphere这样的大型项目，参与的正确姿势是什么？有人选择通读文档，有人选择把模块间架构关系梳理清楚……不过在我看来，从一个点入手，由浅入深，由点及面是参与大型开源项目相对容易的方式。因为一上来就啃一本厚书，很容易厌倦和恐惧，停留在表面，最后兴趣被各种事情冲淡，最后不了了之。而从社区一个很小的任务入手，不仅可以渐渐熟悉项目、获得成就感，更能够积累社区的信赖感，树立自我品牌，最终一览众山小。而在这个过程中，你也会发现自己的知识、技能、人际关系都在崎岖的路上不断上升！
由深入广 这个小节用来讨论大家争执已久的一个问题：究竟是先进行深度学习，还是先进行广度学习。标准答案似乎是：同时进行。但是从实践的角度讲，我们的精力、学习阶段、难易程度等因素都会让这个做法变得不太容易进展、很耗时、短期内没有产出。每个人从事的工作阶段、内容都有所不同，自然看法各异。从我个人角度来看，我更倾向于先深度后广度，同时尽可能兼顾彼此。
先深度，是为了帮助我们打下坚实的基础。试想一座空中楼阁，每次风吹雨打都会引发你的惊慌，又如何风轻云淡地向四周望去？正是由于有了扎实的地基，才让你觉得能够更容易理解别的高楼的建筑风格和特色，即在同一个交流层次能帮助我们快速了解他人的核心要点和提出自己的见解。在我刚入行的时候，我很不理解为什么要去听其他人的分享？我自己的一亩三分地还没有耕作完，日日新增的工作还不够我操心，我真的有时间再关注他人吗？当时，我的思想和视野都是狭窄的，我的更多精力是聚焦在了基石的打造，从GitHub提交记录可以看到我疯狂地学习和贡献，此时我没有多余的精力，也没有欲望去关注别人，于是我的视野也很有限。而当我不断熟悉了这个项目的架构与细节，这个领域的知识体系之后，突然发现我可以抽出一部分时间和精力去了解整个行业，而不仅仅是整个项目。而且此刻，我特别有欲望想看看别的楼阁是怎么搭建的、别人的项目是什么情况，我们和别人的异同在哪里。这增大我的视野，也意味着我开始转向对广度的寻求。
其实最好的做法，还是在深耕的同时，关注广度，了解别人在做什么。这样可以有效帮助我们在世界的大地图里，知道自己在哪个位置、自己的水准如何。不过，建议是建议，实践是实践。最好的方式还是问问自己，想不想，要做不做。因为，我选择，我自由，我存在。
由内向外 作为开源分布式数据库开发工程师，开源是赋予这个工作岗位的神奇力量。因为在开源的世界里，有开放、自由、平等、自我提升、品牌打造，也有竞争和资本的力量。这让我发现，我不是固步自封，我能感受到来自其他城市、不同国家的新鲜气息。在与同行朋友交流的过程中，你会发现这个行业的立体面，每个人不同的想法都非常有意思。当然，冲撞必不可少，成长的代价和痛苦也一定会非常给力地到位。迷茫和挣扎也一定会伴其左右，因为这就是一场典型的英雄之旅。但我在这个领域除了收获技能和知识，还收获了良师新友和分享的机会和能力。我并不想带来太多负面情绪给大家，我希望阅读文章的朋友能获得新的想法和力量。
过去一年半走过了深圳、上海、北京、南京，参加过中国系统架构师大会、COSCON中国开源年会、OSCHINA中国开源峰会、PstgreSQL中国技术大会、全国互联网架构峰会、ITPUB在线分享等各种会议。在机场写代码，在会场交流，在深夜写PPT。而这一系列的锻炼也磨练出了我的耐心、清晰的逻辑能力、良好的口语表达、自我的认识。我记得最开始，我编写PPT和准备分享都要提前2~3周准备，每天都抽空看看，现在已经变成提前1周准备，随后临场发挥。最近几期的音频和视频分享可以在公众号ALC Beijing 和B站收听和收看，欢迎关注。 ^_^ 后序 篇幅所限，未能展开叙述。在文章最后，还是有些”鸡汤”想和大家分享。例如：与其病态地熬时间地做事情，不如多费心在身体锻炼和思考如何高效集中工作。作为过来人，觉得非常重要。此外，在你的英雄之旅中，找寻本我，释放压抑的情绪，活出自己。每一字一句，是我斟酌良久，给出的建议。因为在高节奏的生活和工作中，我逐渐发现自己人云亦云，被快餐手机消费，压抑自己的情绪，活着像个机器人，追寻所谓的“你好，我好，大家好”。
而现在，愿我，与你都能拥有力量，在不伤害他人的前提下，释放自己的能量，成为我自己，勇敢而执着地踏上英雄之旅！</description></item><item><title>Podcast Episode #1：Apache SkyWalking 那些事</title><link>https://alc-beijing.github.io/alc-site/post/podcast/episode-1-talk-to-skywalking/</link><pubDate>Mon, 27 Apr 2020 16:10:58 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/podcast/episode-1-talk-to-skywalking/</guid><description>内容梗概 个人项目、Apache TLP、潇洒的创始人、众多的客户、多个云厂竞相支持、中国本土、APM骨灰级玩家&amp;hellip;&amp;hellip;.拥有众多光环的 SkyWalking ，究竟有何神奇的魔力？在短短的几年内迅猛发展，在竞争如此激烈的APM 市场，获得无数的拥泵！ ALC Beijing Podcast 首秀，诚挚邀请到 Apache SkyWalking的创始人、主要的贡献者来聊聊 SkyWalking的酝酿、命名、开发、开源、建设Community、收获用户、发展壮大、进入Apache、孵化、成为TLP、下一代版本、如何维护的。我们就是来不正经地“八卦” Apache 开源项目背后故事！
SkyWalking社区拥有来自全球的，200位以上的贡献者包括30多位以上的 Committer。SkyWalking的项目用户和贡献者来自亚洲、欧洲、北美。那么，SkyWalking的社区到底是什么样子？推进社区发展和合作的原则和背后的逻辑是什么？ ​—— 吴晟，潇洒的程序员
本期亮点 ALC Beijing 介绍 SkyWalking 这么酷炫的名字是从何而来的？是星球大战迷？还是信手拈来？ 一位”007“全职之余的贡献者，是如何在为SkyWalking贡献中获得个人娱乐和满足的 SkyWalking 获“友商”青睐，受邀在竞品项目的会议上分享 .Net 探针的相爱相亲记 SkyWalking 受到各大云厂商的支持和追捧 SkyWalking 是如何获得一位同类项目开发者的赏识，放弃原有代码，转而全力加入SkyWalking的 创始人兼VP兜底自己的Merge “摸鱼”行为 主要的维护者打算什么时候离开项目，彻底交出控制权？ 下一个版本，竟然还不知道开发什么功能？(ÒωÓױ)！ 请收听 出场嘉宾 潘娟 （主持人）：京东数科高级DBA，Apache ShardingSphere PMC，ALC Beijing Member。
姜宁：Apache Member ， ALC Beijing 发起人，华为开源软件中心技术专家，前红帽软件首席软件工程师，有十五年以上企业级开源中间件开发经验，有丰富的 Java 开发和使用经验，函数式编程爱好者。从 2006 年开始一直从事 Apache 开源中间件项目的开发工作，先后参与 Apache CXF， Apache Camel，Apache ServiceMix，以及Apache ServiceComb的开发。2015年开始担任Apache 孵化器导师，参与孵化了 Apache Rocket， Apache Skywalking， Apache ShardingSphere， Apache iotDB， Apache Doris， Apache APISIX， Apache Weex。</description></item><item><title>ALC Beijing 志愿者招募</title><link>https://alc-beijing.github.io/alc-site/post/call_for_volunteer/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/call_for_volunteer/</guid><description>Open source is changing the world. And if you want to be a part
of that change, all you have to do is participate. Jason Hibbets《 the foundation of an open source city》
什么是 ALC? ALC是Apache Local Community的缩写，是全世界范围的 Apache 开源爱好者本地群组。 因为是本地组织，ALC 是按照城市或地区的方式进行划分的，类似的机构还有 GDG (Google Developer Group), Facebook Developer Circles, Mozilla Reps 等。 任何 Apache 开源爱好者都可以代表自己所在的城市向 ALC 提出申请创建本地的组织。
为什么创建 ACL-Beijing? 根据 ASF 2019 年年度报告，中国已然成为Apache软件基金会项目下载量最大的地区。 然而，这个看起来脱颖而出的数据背后，却暴露出我国这片土地上几个可能让大家颇为惊讶的现状：</description></item><item><title>Apache毕业贺礼—Apache ShardingSphere跌宕起伏的开源之路</title><link>https://alc-beijing.github.io/alc-site/post/sharding_sphere_graduation_celebration/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/sharding_sphere_graduation_celebration/</guid><description>作者介绍
潘娟，京东数科高级DBA，Apache ShardingSphere PMC 张亮，京东数科数据研发负责人，Apache ShardingSphere VP，Apache Dubbo PMC，人气开源项目Elastic-Job作者
前序 从Sharding-JDBC到Apache ShardingSphere； 从轻量级的分库分表中间件到完整闭环的分布式数据库中间件平台； 从2016年1月的第一行代码到现今的300K+行代码； 从寥寥无几的关注到GitHub 10K+的star； 从无人问津的社区到100+位贡献者； 从公司内部的应用类库到100+的采用公司列表； 从寻找mentor到顺利成为Apache顶级项目。 …… ShardingSphere在经历了500多天的ASF孵化器孵化，毕业成为Apache顶级项目。ASF孵化器作为进入ASF的通道，为进入ASF的项目提供Apache Way的辅导，协调孵化项目与ASF基础实施融合，帮助孵化项目发展社区，确保孵化器项目发布的软件符合ASF的软件发布规范。本文是Apache ShardingSphere核心开发团队分享的Apache孵化历程，很值得想加入ASF大家庭的新项目参考。
项目介绍 Apache ShardingSphere是一套开源的分布式数据库中间件解决方案组成的生态圈，它由3款相互独立，却又能够混合部署配合使用的产品组成。它们均提供标准化的数据分片、分布式事务和数据库治理功能，可适用于如Java同构、异构语言、云原生等各种多样化的应用场景，核心功能如1-1所示。
1-1 ShardingSphere核心功能架构图
Apache ShardingSphere由三个子项目组成，形成一个完整的数据库解决方案，合称 J.P.S. 生态系统。
ShardingSphere-JDBC：定位为轻量级Java框架，在Java的JDBC层提供额外服务。 它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架。 ShardingSphere-Proxy：定位为透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。 目前提供MySQL/PostgreSQL版本，它可以使用任何兼容MySQL/PostgreSQL协议的访问客户端操作数据，对DBA更加友好。 ShardingSphere-Sidecar（TODO）：定位为Kubernetes的云原生数据库代理，以Sidecar的形式代理所有对数据库的访问。 通过无中心、零侵入的方案提供与数据库交互的的啮合层，即Database Mesh，又可称数据网格。
Apache ShardingSphere的亮点主要包括：
完整的分布式数据库解决方案：提供数据分片、分布式事务、数据弹性迁移、数据库和数据治理等核心能力。 独立的SQL解析引擎：支持多SQL方言的完全独立化SQL解析引擎，能够脱离ShardingSphere独立使用。 可插拔微内核：所有的SQL方言、数据库协议和功能都能够通过SPI的可插拔方式加载或卸载，微内核甚至在未来可以运行于无任何功能的空白环境中。 Apache基金会 The most popular open source software is Apache. 这是对Apache开源软件基金最好的描述和肯定。它旨在为全世界提供优质的开源软件，同时欢迎全世界的朋友加入Apache社区贡献力量，并在这个过程中不断成长、得到肯定、共建开源社区。无论是否从事软件开发工作， 大家多少都知道它的存在和它提供的优质开源项目，可见其影响之大、之深远。此外，参与Apache开源社区，并在自己的努力下成为Apache committer，更是大多数软件开发工程师心之所向。 ShardingSphere在开源之初，就有进入Apache开源组织基金会的计划。其原因有以下几点
Apache基金会独特的Apache way和社区建设思想会让一个开源项目更规范、更有生命力。 Apache基金会的导师制度会为一个开源社区带来优秀的指导和帮助。 Apache基金会会为其下的开源项目带来版权和商标上的法律保护。 Apache基金会在全世界范围内的影响不言而喻，若是能进入Apache基金会，则会扩大项目的影响力，使其进入世界范围的开源领域。 Apache基金会内的项目会更有机会登上世界舞台，并与其他开源项目建立友好交流，也能吸引更多贡献者加入社区。 但同样，进入Apache开源基金会的门槛可并不简单，特别对于国内的项目来说，语言和地域的障碍无疑雪上加霜。 为Apache做准备 找寻mentor是进入Apache基金的最初且最重要的一步。在了解了Apache基金会的运作方式后，我们便踏上了找寻mentor之旅。参加各种与开源相关的分享会或meetup，借此来认识Apache的member。但是，事情却并不顺利。多次的尝试，多次的接触换来的只是口头的认可。这段时间我们确实倍感压力和焦虑，甚至打算以后再说，一切随缘。 后来一个契机，我们认识了吴晟和姜宁。吴晟是Apache SkyWalking项目的VP，在开源领域有丰富的经验。他和ShardingSphere的前身Sharding-JDBC很有渊源，Sharding-JDBC项目原型也有他参与设计，因此，他最终作为ShardingSphere的PPMC一同建设社区。在参与ShardingSphere社区建设的这一年多的时间里，他又陆续担任了多个Apache孵化项目的Mentor，并在今年被选举为Apache Member；而姜宁同样是一位热心又有经验的老手，国内最资深的Apache Member之一，他是多个国内发起的Apache孵化项目的导师，有着丰富的项目孵化经验。 在与他交流的过程中，我们了解到项目孵化还需要再寻找到两位导师的支持，他也乐意帮助我们介绍导师。这终于让我们看到一些希望，他也最终成为了我们的mentor。再后来，团队VP张亮又前去上海参加HDC大会，认识了我们的另一位mentor—Craig L Russell，Craig当时是Apache的秘书长，所有的SGA、ICLA等法务文件均由他负责接收签署。在ShardingSphere孵化的过程中，Craig当选了Apache软件基金会的主席。他友善而和气，给予了我们很多有关社区规范的实用建议，也愿意助我们一臂之力；第三位mentor则是由Apache RocketMQ的核心成员冯嘉担任；最后由Roman Shaposhnik担任项目的Champion，为项目寻找导师之旅画上完美句号。 至今还记得我们当时的欣喜和激动。每个进入Apache基金会的项目，一定都有自己的故事。进入ASF孵化难这一问题是由于大家对ASF的孵化流程不了解， 同时缺少有经验的接口人（Champion）的介入引起的。 随着ALC Beijing的建立和越来越多本地开发者成为孵化器导师，我们相信这一问题能够很快得到解决。如果大家对加入ASF孵化器进行孵化感兴趣的话，欢迎大家与ALC Beijing的成员联系，在这里你可以结识到很多Apache的项目的开发者，ASF成员以及孵化器导师。</description></item><item><title>为何Apache软件基金会能孵化出如此多成功的开源项目</title><link>https://alc-beijing.github.io/alc-site/post/asf_incubator_process/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/asf_incubator_process/</guid><description>ASF基金会的项目来源分为个人捐献项目和公司捐献项目。这两者在进入Apache基金会之后，并不做过多的区分。总体而言，虽然很多传奇的开源项目有个人英雄主义色彩，但也不乏有很多公司捐献的项目获得了巨大的成功（Hadoop, Spark, Kafka等）。那么问题来了，为什么ASF需要设置孵化器项目呢？
孵化器项目的必要性 ASF基金会有统一的开源治理原则与规则（被称为Apache Way, 具体请参考：https://www.apache.org/theapacheway） 来保障开源软件的质量以及开源社区的健康发展。而企业和个人捐献的项目可能五花八门，从而产生巨大的Gap。这个差距可能会包括：开发流程，基础设施支撑，社区文化，代码质量，文档质量等方面，因此需要经历孵化期来加以改进或者调整来达到基金会的基本要求。 除此之外，项目的贡献者从单一公司/个人贡献过渡到多元化的社区贡献需要一个过程。罗马不是一天建成的，让外部开发者了解开源项目的使用以及有兴趣和意愿参与进来，需要不断通过各种形式（技术会议，邮件组讨论，技术媒体文章等等）做社区推广。 最重要的是，由于捐献的项目可能会涉及到第三方的代码及知识产权，在孵化器阶段，知识产权（IP）和软件许可（License）需要进行统一的规范化，从而确保最终用户可以放心使用，不必有后顾之忧。
了解为项目设定孵化器阶段的必要性之后，我们就很容易理解每个项目在孵化阶段需要达成的目标。
项目在孵化阶段的目标 确保孵化器项目的组织架构以及日常运营能符合基金会统一的原则以及流程 确保捐献的项目的IP以及法律相关问题能在一个合适的时间和平台上得到关注、帮助以及充分解决 确保项目以及项目背后的社区的成长与推广符合基金会的目标 确保项目的成熟、毕业以及被基金会统一背书有统一的标准 在正式介绍孵化流程之前，笔者还想先介绍一下ASF孵化项目最重要的角色之一，就是导师（Mentor）。
孵化器项目导师的角色与职能 Apache软件基金会所定义的导师职能如下： &amp;ldquo;Mentors are chosen by the Sponsor to actively monitor the podling, guide the podling in the Apache Way, and report its status to the Sponsor and the Incubator PMC. All Mentors must be members of the Incubator PMC. A Mentor has the following responsibilities toward the Incubator PMC, the Sponsor, and the community of the assigned Podling.</description></item><item><title>ASF公司架构和治理</title><link>https://alc-beijing.github.io/alc-site/post/apache_corporate_organization/</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/apache_corporate_organization/</guid><description>公司治理 总的来看，Apache软件基金会（ASF）的治理相当简单：由成员(Member)来选举董事会；董事会任命各种管理人员并创建PMCs；PMCs定期向董事会报告，大多数其他管理人员向总裁汇报，然后总裁向董事会报告。
组织架构和职责 为了更好的管理公司，ASF建立了如下组织架构：
现有成员(Member)会定期提名和选举新成员，每年提名并选举9名董事加入董事会。
董事会任命业务官员，并将特定政策或业务领域的责任分配给每位官员。例如，法律事务委员会副总裁负责为ASF和所有Apache项目设置法律政策，并与公司顾问进行合作。
董事会任命执行官，包括总裁，秘书，财务总监等，他们负责ASF的特定领域运营。
大多数官员每月直接向总裁报告，而总裁则每月向董事会报告ASF的整体运营状况。
基础设施副总裁向总裁汇报，并对基础设施团队的运营进行宏观监督。在团队中，带薪的基础设施管理者角色有助于管理日常操作，为带薪人员确定工作优先级，并维护所有Apache项目中使用的基础服务。
选举和任命 董事会创建并更新项目管理委员会（PMCs）。董事会只是批准孵化器的合理构建请求（毕业成为TLPs）或来自PMCs自身（添加或删除PMC成员）的请求。在每种情况下，向董事会建议进行的变更都已经由相关的PMC完成了投票。如下图所示：
项目治理 每个Apache PMC都独立管理他们的项目，以Apache的方式，遵循由所有官员为所有项目设置的一些核心原则。如下图所示：
PMC每季度直接向董事会报告一次。董事会对PMC进行监督，以确保PMC健康发展，顺利的管理社区，确保PMC遵守Apache的原则。项目的技术方向由PMC指定，董事会不对项目提供技术治理。
每个PMC的主席都是该项目的副总裁，因此也是ASF的官员。主席的主要职责是确保项目报告全面，并提交到董事会。
PMC对软件版本发布进行投票。PMC进行适当的发布治理，进而确保了所有的源代码版本发布都是ASF官方行为。
PMCs为项目提名并选举新提交者(Committer)。PMCs还负责提名并投票新的PMC成员，然后PMCs向董事会汇报建议的变化。
Apache孵化器(Incubator)是一种特殊的（I）PMC：它的工作是指导新建立的Podling社区，以帮助他们学习Apache Way。在每个Podling对他们的软件发布进行投票后，IPMC成员也对该Podling的发布过程进行监督和投票，以确保Podling逐渐成长为一个合格的Apache项目。
根据政策，只有个人可以充当会员，提交者(Committer)或PMC成员(Member)或管理人员。这是ASF和Apache项目保持其独立性的一种方式。
参考链接 [1] http://www.apache.org/foundation/governance/orgchart</description></item><item><title>Apache 软件基金会2020年度董事会成员介绍</title><link>https://alc-beijing.github.io/alc-site/post/new-asf-board-of-directors-2020/</link><pubDate>Fri, 03 Apr 2020 09:59:50 +0800</pubDate><guid>https://alc-beijing.github.io/alc-site/post/new-asf-board-of-directors-2020/</guid><description>在上周 Apache 软件基金会（下称 ASF ）举行了成员会议，嗯，没错，就是一年一度的董事会选举会议，会议上以下个人成员组成了新的董事会：
Shane Curcuru (连任董事) Bertrand Delacretaz（原董事） Roy Fielding（原董事） Niclas Hedhman（新任董事） Justin Mclean（新任董事） Craig Russell (连任董事) Sam Ruby（原董事） Patricia Shanahan （新任董事） Sander Striker （原董事） 同时，ASF 要非常感谢去年的董事成员：Danny Angus、Rich Bowen、Ted Dunning、Dave Fisher、Myrle Krantz、Daniel Ruggeri、以及 Roman Shaposhnik，感谢他们卓越的服务。
让我们再次欢迎新任的董事，以及回归的董事们！
有关 ASF 治理的概述以及ASF董事会、执行官和项目/委员会副主席的完整列表，请访问：http://apache.org/foundation/。
更多关于 Apache 基金会的组织结构和运转方式，请移步:Apache 是如何运作的？。
原文链接 Announcing New ASF Board of Directors</description></item><item><title>ASF年度大会程序</title><link>https://alc-beijing.github.io/alc-site/post/the_procedures_of_asf_annual_members_meeting/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/the_procedures_of_asf_annual_members_meeting/</guid><description>ASF年度大会程序 ASF至少每13个月举行一次年度成员大会，选举新的董事会，并对新的候选人进行投票。ASF年度会议由成员志愿者按照以下基本程序进行。
[说明] 本篇参考[1]内容进行编写，部分措辞和语言组织略有调整，但保证内容含义的严格一致性。ASF虽然是一个非盈利组织，但是ASF是以公司化的方式进行运作的，有股东，董事会，还有执行机构，也有一些其他的雇员。本文中所提到的ASF年度大会算的是股东大会。
目录 听众 会议机制-IRC沟通 成员候选人投票 如何计算成员投票 怎样决定如何对成员候选人进行投票 董事会投票 如何计算董事会投票 怎样决定如何对候选进行上投票 听众 本文档是ASF召开正式成员会议的概述。如果您是ASF的成员，请参阅本年度会议的 Private README.txt 以获取有相关方面的最新详细信息： /repos/private/foundation/Meetings/20200331/README.txt
会议机制-利用IRC沟通 由于我们的成员来自全球，因此成员会议在三天的时间内通过freenode的IRC举行。会议的前半部分（通常是星期二）在IRC实时聊天中举行，邀请所有成员参加。就像任何大型会议一样，轮值主席会负责根据预定的会议日程（agenda）和与会人员轮流在线交互。在会议的上半场中，我们审查来自各执行官的关于过去一年的基金会状况的报告。在上场年会无法出席的成员可以提交代理申请，以便可以将他们标记为出席。
在会议上半场结束时，议程列出了下一届董事会的候选人，以及基金会的任何新候选人。候选人宣布后，会议将进行约46小时的休会。
在休会期间，我们的Apache STeVe投票软件会向所有合格成员发送安全的私人电子邮件投票。投票通过电子邮件开放40多个小时，使世界各地的成员都可以方便地进行投票。所有选举计数和跟踪工作均由Apache STeVe和几位Member志愿者选举监督员执行。使用您的Apache ID登录后，在Web界面进行投票。
在会议恢复之前（通常在星期四），投票将关闭几个小时，以使选举监督人员可以相互核对他们的票数是否一致。当会议在IRC上恢复时，主席宣布候选人名单的结果，并在会议上宣布董事会选举。会议的下半场通常要短得多，如果成员已经参加了上半场，则无需参加下半场。
请不要等到最后一分钟进行投票：由于在会议召开前10天列出了所有董事会成员和新成员候选人，因此您有足够的时间事先研究您的选择。同时，投票过程是有监督的，监督人员来自组织的志愿者。
会议结束后，将立即成立并宣布新董事会的任期，并由提名他们的现有成员向幸运的新成员候选人发出私人邀请。请注意，我们不会公开新当选成员（Member）的姓名，因为可能（很少）有些人不接受成为新成员的邀请。
成员候选人投票 如何计算成员投票 要选出新成员，根据我们的章程4.1的规定，他/她必须获得在提名中进行投票的赞成票多于否决票。所有投票跟踪和记录都由Apache STeVe处理，由我们的票监督人员进行监控。投票的运行和审核过程均由ASF成员私下完成。
对新成员候选人的投票是保密的；由于投票是针对个人的，因此投票监控器确投票结果后，便不会共享投票结果。
怎样决定如何对成员候选人进行投票 这完全由每个ASF成员来决定。新成员候选人由现有成员提名，候选人发布说明为什么他们认为候选人会成为好的成员。提名通常需要几秒钟的时间，其中许多还包括有关候选人当选原因的个人事迹。
由于新候选人是参与Apache项目的人员，因此许多人通过搜索邮件列表来查看候选人过去如是何参与我们的社区贡献的。使用PonyMail的存档非常容易-ASF成员可以在其中查看所有邮件列表，甚至是私人邮件列表。
许多成员都希望从现有成员那里获得强有力的提名理由，解释说明提名人为什么会成为好的候选人。在投票之前花几秒钟仔细阅读一下成员提名文件十分重要。
董事会投票 如何计算董事会投票额 ASF使用一次可转让投票（STV）来选举每年董事会的所有9个席位。每个候选人都单独参加；没有候选人名单。只有ASF成员才能提名人选参加董事会选举；所有候选人都已经是ASF成员。
STV旨在帮助小规模的相关选区选举董事会成员。这种计票设计有助于使选民展示自己的实际愿望，避免过于灵活。请继续阅读有关如何使用STV的讨论，包括有关志愿者投票监控员实际上如何收集选票的详细信息。
要记住的最重要的事情是：请按照您的偏好顺序进行投票！尽一切努力使您的＃1偏好进入董事会；＃1选票比其余选票更重要。如果您按字母顺序投票（某些人似乎对过去的选票进行了投票），那么您会发出强烈的信号，表示您希望董事会以Awful先生和Beastly女士之类的名字出现-可能不是您想要的。我们的Apache STeVe工具将分配给候选人的字母随机化，以尝试解决这个问题。
选举结果使用Seek的Meek方法计算。技术细节可以查阅Apache STeVe项目代码，当然这是Apache项目。
STV计票循环进行。每当董事会候选人获得足够的选票以当选时，该循环就会列出名字。投票首先要分配给该选票上指示的第一候选人。随着投票的进行，投票将重新分配。当确定某候选人不会当选时候，他们的选票将重新分配。当候选人当选时，他或她只带了足够的选票就足以使他当选；他们的其他选票是根据该选票上排名较低的排序发送的。
该YouTube视频提供一个轻松活泼的介绍：Politics in the Animal Kingdom: Single Transferable Vote: or a shorter description of how second, third, etc.</description></item><item><title>如何成为合格的ASF贡献者</title><link>https://alc-beijing.github.io/alc-site/post/how_to_be_a_qualified_asf_contributor/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/how_to_be_a_qualified_asf_contributor/</guid><description>阿里土话 ASF是一个开源组织，他有自身的文化，阿里是一个要活好102年的公司，其文化底蕴非凡！分享ASF之前总想或多或少的和大家分享一些阿里的味道！
给世界带来微小而美好的改变 把幸运种子种到别人身上去，你才会有幸运 Never， Never， Never Give Up（永不放弃） 没错，阿里人看到上面的三句话会倍感亲切，因为上面三句都是 “阿里土话”。虽然是阿里土话，但我认为其有放诸四海而皆准的魅力！这些话，同样适用于激发和指导你成为合格的开源贡献者！不经意间看了一眼窗外，心里开心默笑，其实阿里每个角落都充满着阿里气息：
缘 其实每个人参与社区贡献的机缘不一样，但无外乎两种：
偶发事件 - 由于参与某项工作，无选择的就参与了某个开源项目。（我就是这种，很自然的就跟着 蒋晓伟 老师踏入了Apache Flink之旅）
因爱而求 - 每个码农都有一颗想让自己的的代码被应用全球的梦想追求！这梦想的实现要依托有开源的力量，ASF可以为你提供一个逐梦的舞台～
给个理由 也许目前的你既没有工作的需要，也没有对开源产生任何爱意❤️。但了解一件事情总没有坏处，了解参与开源的利好，也许明天你就踏上了开源之旅！
顺势而为 - 如果你是一个码农，那么参与开源是一种must to have的事情，目前开源领域形式大好，各大公司纷纷拥抱开源，比如：Google，Alibaba，Hortonworks, Tencent, Facebook等等。参与开源无疑是扩大了生存的空间。
业界身份证 - 参与开源就是在一点一滴的描绘你的业界身份证，你的开源贡献可以公示全球，由一行代码，一句文档的贡献，到参与项目管理成为项目管理委员会(PMC)一员，到成为 ASF Member 甚至 成为董事会成员，这些就像你曾经为之努力的学士学位，硕士学位，博士学位一样为世人所认可！不夸张的说，某些情况甚至比学位证书还实用！
无国界导师 - 参与开源还有一个特别特别特别重大的利好，就是你可以在你所关注的领域在全球领域寻找到最好的导师，所谓最好，不是牛，最好是最适合！所谓“三人行，必有我师”，社区交流最初你会感觉和业界大牛无法沟通，因为他的一句话，需要分解成十句才能懵懵懂，甚至不懂！这个不是大牛原因，也不是你的原因，是大牛对你水平的了解不足导致，即使大牛了解你的水平，也很难让大牛将一句话分解成十句甚至百句话讨论你关注的问题，不是大牛不愿意，更多是我们不好意思:)。所以说，要“门当户对”找到 社区比你水平略高，同时你也能给人家一些反哺的贡献者长时间交流。开源社区有着“帮传带“”的传统， 社区导师对新人都非常友好，很多时候社区导师会通过帮助社区新人展示自己的技术能力，积累社区影响力。因此对于新人有价值的问题，导师基本上是知无不言，言无不尽。 目前ASF有7600+的Committer，就算是某一个项目，也应该有几十个Committer和数以百计的贡献者，总会遇到可以和你一起进步的小伙伴！虽不曾谋面，却已熟若亲朋！
全球性分享 - 目前ASF项目有140多个领域，参与者覆盖230个国家。如果你小有成就，想将你的知识分享给更多的人，想利用的开源知识帮助更多的人，那么无疑ASF为你提供了这样的平台！你又何尝不能成为上面“无国界导师”中的一员的导师呢！
最佳实践 - 不知 - 了解 - 有方案 - 最佳方案，开源是一个智慧的集结地，一个功能可能有几十种实现方式，这并不是一两个人或者某一个小团队能考虑到(ALL)的，然而在开源一个问题，你在考虑的同时，可能在世界的某个角落，某些角落还有其他人或团队在考虑解决方案，当大家共享方案的时候，智慧的火花将会产生！</description></item><item><title>DolphinScheduler介绍</title><link>https://alc-beijing.github.io/alc-site/post/introduce_of_apache_dolphinscheduler_incubating/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/introduce_of_apache_dolphinscheduler_incubating/</guid><description>DolphinScheduler介绍 DolphinScheduler，简称”DS”, 中文名 “小海豚调度”（海豚聪明、人性化，又左右脑可互相换班，终生不用睡觉）。希望 DolphinScheduler 就像它的名字一样，成为一个“开箱即用”的灵活易用的调度系统。
1概述 DAG 全称Directed Acyclic Graph，简称DAG。工作流中的Task任务以有向无环图的形式组装起来，从入度为零的节点进行拓扑遍历，直到无后继节点为止。
Apache DolphinScheduler（目前处在孵化阶段）是一个分布式、去中心化、易扩展的可视化DAG工作流任务调度系统，其致力于解决数据处理流程中错综复杂的依赖关系，使调度系统在数据处理流程中开箱即用。
DolphinScheduler是2019年开源的一个调度系统，在去年美国时间2019年8月29号，分布式任务调度引擎DolphinScheduler（原EasyScheduler）正式通过顶级开源组织Apache基金会的投票决议，以全票通过的优秀表现正式成为了Apache孵化器项目！
2背景 在2017年，易观在运营自己6.8Pb大小、6.02亿月活、每天近万个调度任务的大数据平台时，受到ETL复杂的依赖关系、平台易用性、可维护性及二次开发等方面掣肘，易观的技术团队渴望找到一个具有以下功能的数据调度工具：
易于使用，开发人员可以通过非常简单的拖拽操作构建ETL过程。不仅对于ETL开发人员，无法编写代码的人也可以使用此工具进行ETL操作，例如系统管理员和分析师； 解决“复杂任务依赖”问题，并且可以实时监视ETL运行状态； 支持多租户； 支持许多任务类型：Shell，MR，Spark，Flink，SQL（mysql，postgresql，hive，sparksql，clickhouse等），DataX，Sqoop，Python，Sub_Process，Procedure等； 支持HA和线性可扩展性。 易观技术团队意识到现有开源项目没有能够达到他们要求的，因此决定自行开发这个工具。他们在2017年底设计了DolphinScheduler的主要架构；2018年5月完成第一个内部使用版本，后来又迭代了几个内部版本后，系统逐渐稳定下来。
3特点 DolphinScheduler提供了许多易于使用的功能，可加快数据ETL工作开发流程的效率。其主要特点如下：
通过拖拽以DAG 图的方式将 Task 按照任务的依赖关系关联起来，可实时可视化监控任务的运行状态； 支持丰富的任务类型； 支持工作流定时调度、依赖调度、手动调度、手动暂停/停止/恢复，同时支持失败重试/告警、从指定节点恢复失败、Kill 任务等操作； 支持工作流全局参数及节点自定义参数设置； 支持集群HA，通过 Zookeeper实现 Master 集群和 Worker 集群去中心化； 支持工作流运行历史树形/甘特图展示、支持任务状态统计、流程状态统计； 支持补数，并行或串行回填数据。 4系统架构 DolphinScheduler 是从数据处理的痛点出发，其解决的问题以及优化的方向主要有以下 5 点：
可视化流程设计减轻了开发者配置工作流的复杂度，从繁琐的基础配置中解放出来，不用再靠编程来配置流程，提升开发效率；
扩展性强，在当下这样一个业务变化快、技术迭代频繁的现在，丰富的任务类型、跨语言和自定义插件机制良好的可扩展性，无疑使这款框架具备了更长的寿命和更广泛的落地场景；
支持工作流定时调度、依赖调度、手动调度、手动暂停 / 停止 / 恢复，同时支持失败重试 / 告警、从指定节点恢复失败、Kill 任务等操作
支持集群 HA，通过 Zookeeper 实现 Master 集群和 Worker 集群的天然去中心化架构设计，使得系统的高可用性得到保证；</description></item><item><title>为什么要成立 ALC (Apache Local Community) Beijing？</title><link>https://alc-beijing.github.io/alc-site/post/alc-beijing-creation/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><guid>https://alc-beijing.github.io/alc-site/post/alc-beijing-creation/</guid><description>背景 当提起Apache软件基金会（Apache Software Foundation，ASF）项目时，国内大多数程序员都不会陌生。下图展示了在ASF 2019年年度报告中披露的ASF软件在全球各国家的下载量排名。
可以看到，中国已然成为Apache软件基金会项目下载量最大的地区。然而，这个看起来脱颖而出的数据背后，却暴露出我国这片土地上几个可能让大家颇为惊讶的现状：
ASF 拥有7000+代码贡献者，然而为 ASF 项目提交贡献的本土工程师仅千人规模，不足七分之一。 ASF 项目约350个，然而由本土发起的 ASF 项目仅19个，已成为顶级项目的比例更是不足5%。 ASF 孵化器拥有导师200多个，然而活跃的中国导师不超过5位。 ASF 每年在美国、欧洲等地举办 ApacheCon ，然而迄今为止，ASF 尚未在中国举办过一次 ApacheCon。 作为全球最大开源消费国， ASF 在国内有广泛的群众基础，如何将这些开源项目用户发展转换成为社区的贡献者、开发者甚至成为开源项目的发起者、维护者是一个值得深思的问题。 缘起 作为发起人的姜宁，颇为忧伤的语气回忆道：
06年的时候国内参与 Apache 软基金会开发的人员很少，当时只有少数几个在外企工作的人员有机会直接参与ASF项目的开发。当时有个问题一直困扰着我，本土的软件开发人员这么多，但有多少人能够以开源项目维护人员的身份深度参与到开源项目开发中来呢？
以我的个人经历来看，加入到开源项目的开发贡献并不困难，因为开源社区会有很多热心的开发者提供指导和帮助，参与者只要保证有足够时间的投入就可以，但是在我维护 Apache Camel 的7，8年间，很少看到有国人会到项目的邮件列表里面用英文提问题，提补丁。
我的私人邮箱接到国人最多的邮件是直接提需求找我要项目示例的邮件。期间也有国内公司的开发人员与我交流，很多人在使用ASF 项目的过程中发现开源版本不满足自己的需求，就在自己的公司的私有版本上进行了修改，大家没有意识到把问题反馈到ASF上游项目中是最优的解决方法。这里可能有缺乏直接和项目开发者交流的途径原因，也可能是大家已经习惯了拿来主义，缺乏深度参与开源项目开发的热情。 大部分的开发者只停留在使用开源项目这个层面上，没有真正参与到开源项目的全生命周期的开发过程中来。
要改变这样的状况，需要有更多深度参与ASF项目人向大家介绍深度参与开源项目的经验，帮助更多的 ASF 项目用户从单纯的使用者转变成为开源项目的开发者。
机会只会迟到，但永远不会缺席，过了大约十几年，终于迎来了一次真正的机会。
自 2015年至今，ASF 已经接收19个源自中国本土的开源项目的捐赠（如下表所示），这也意味这我们有越来越多的 ASF 项目 Committer，ASF 项目 PMC 成员，或者是 ASF Member 在 Community 里是非常活跃的。这说明本土的人气已经足够, 我们可以一起做更多的事情了。
序号 项目名称 进入孵化器时间 毕业时间 ppmc/pmc人数 commiter人数(包含ppmc/pmc) 1 Kylin 2014年11月 2015年11月 23 39 2 Eagle 2015年10月 2016年12月 16 18 3 HAWQ 2015年9月 2018年8月 45 68 4 CarbonData 2016年6月 2017年4月 13 25 5 RocketMQ 2016年11月 2017年9月 13 26 6 Griffin 2016年12月 2018年11月 18 20 7 Weex 2016年11月 14 26 8 ServiceComb 2017年11月 2018年10月 20 23 9 SkyWalking 2017年12月 2019年4月 24 34 10 Dubbo 2018年2月 2019年5月 17 55 11 ECharts 2018年1月 13 19 12 Doris 2018年7月 13 17 13 brpc 2018年11月 9 9 14 IoTDB 2018年11月 23 32 15 ShardingSphere 2018年11月 14 24 16 DolphinScheduler 2019年8月 13 22 17 Teaclave 2019年8月 15 15 18 APISIX 2019年10月 18 20 19 TubeMQ 2019年11月 20 21 在参与了几个Apache项目孵化之后 ，姜宁已然是一名国内比较有影响力的 ASF 成员 了。他于2018年和2019年在上海发起并组织过两次 ASF Committer 的 Meetup[1][2][3]，希望能够帮助本土的开发者更好的理解开源、参与开源。由于时间仓促和场地有限，只邀请到华东地区的 ASF 项目开发者，并没有惠及到更多的的 ASF 项目的用户。通过这几次 Meetup， 大家发现本土开发者对于 Apache 理念和倡导的哲学并不了解。</description></item></channel></rss>